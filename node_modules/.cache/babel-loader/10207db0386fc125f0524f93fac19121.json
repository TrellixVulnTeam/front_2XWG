{"remainingRequest":"/home/freedomsky/hakaton/front/node_modules/babel-loader/lib/index.js!/home/freedomsky/hakaton/front/node_modules/eslint-loader/index.js??ref--13-0!/home/freedomsky/hakaton/front/src/store/index.js","dependencies":[{"path":"/home/freedomsky/hakaton/front/src/store/index.js","mtime":1630247659151},{"path":"/home/freedomsky/hakaton/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/freedomsky/hakaton/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/freedomsky/hakaton/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAidnVleCI7CnZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlKHsKICBzdGF0ZTogZnVuY3Rpb24gc3RhdGUoKSB7CiAgICByZXR1cm4gewogICAgICBncmFwaFN0cnVjdHVyZToge30sCiAgICAgIHNlbGVjdGVkTm9kZUluZm9ybWF0aW9uOiB7fQogICAgfTsKICB9LAogIG11dGF0aW9uczogewogICAgc2V0R3JhcGhTdHJ1Y3R1cmU6IGZ1bmN0aW9uIHNldEdyYXBoU3RydWN0dXJlKHN0YXRlLCBncmFwaFN0cnVjdHVyZSkgewogICAgICBzdGF0ZS5ncmFwaFN0cnVjdHVyZSA9IGdyYXBoU3RydWN0dXJlOwogICAgfSwKICAgIHNldFNlbGVjdGVkTm9kZUluZm9ybWF0aW9uOiBmdW5jdGlvbiBzZXRTZWxlY3RlZE5vZGVJbmZvcm1hdGlvbihzdGF0ZSwgc2VsZWN0ZWROb2RlSW5mb3JtYXRpb24pIHsKICAgICAgc3RhdGUuc2VsZWN0ZWROb2RlSW5mb3JtYXRpb24gPSBzZWxlY3RlZE5vZGVJbmZvcm1hdGlvbjsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldEdyYXBoU3RydWN0dXJlOiBmdW5jdGlvbiBnZXRHcmFwaFN0cnVjdHVyZShjb250ZXh0KSB7CiAgICAgIGZldGNoKCJodHRwczovL2IzMDktMTA5LTI1Mi04MC02MC5uZ3Jvay5pby9vcmctc3RydWN0dXJlIiwgewogICAgICAgIG1vZGU6ICJjb3JzIgogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGNvbnRleHQuY29tbWl0KCJzZXRHcmFwaFN0cnVjdHVyZSIsIGRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXREYXRhQ2FyZDogZnVuY3Rpb24gZ2V0RGF0YUNhcmQoY29udGV4dCwgaWQpIHsKICAgICAgZmV0Y2goImh0dHBzOi8vYjMwOS0xMDktMjUyLTgwLTYwLm5ncm9rLmlvL2NhcmQvIi5jb25jYXQoaWQpLCB7CiAgICAgICAgbW9kZTogImNvcnMiCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgY29udGV4dC5jb21taXQoInNldFNlbGVjdGVkTm9kZUluZm9ybWF0aW9uIiwgZGF0YSk7CiAgICAgIH0pOwogICAgfQogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["/home/freedomsky/hakaton/front/src/store/index.js"],"names":["createStore","store","state","graphStructure","selectedNodeInformation","mutations","setGraphStructure","setSelectedNodeInformation","actions","getGraphStructure","context","fetch","mode","then","res","json","data","commit","getDataCard","id"],"mappings":";AAAA,SAASA,WAAT,QAA4B,MAA5B;AAEA,IAAMC,KAAK,GAAGD,WAAW,CAAC;AACxBE,EAAAA,KADwB,mBAChB;AACN,WAAO;AACLC,MAAAA,cAAc,EAAE,EADX;AAELC,MAAAA,uBAAuB,EAAE;AAFpB,KAAP;AAID,GANuB;AAOxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBADS,6BACSJ,KADT,EACgBC,cADhB,EACgC;AACvCD,MAAAA,KAAK,CAACC,cAAN,GAAuBA,cAAvB;AACD,KAHQ;AAITI,IAAAA,0BAJS,sCAIkBL,KAJlB,EAIyBE,uBAJzB,EAIkD;AACzDF,MAAAA,KAAK,CAACE,uBAAN,GAAgCA,uBAAhC;AACD;AANQ,GAPa;AAexBI,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBADO,6BACWC,OADX,EACoB;AACzBC,MAAAA,KAAK,CAAC,mDAAD,EAAsD;AACzDC,QAAAA,IAAI,EAAE;AADmD,OAAtD,CAAL,CAGGC,IAHH,CAGQ,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OAHR,EAIGF,IAJH,CAIQ,UAACG,IAAD,EAAU;AACdN,QAAAA,OAAO,CAACO,MAAR,CAAe,mBAAf,EAAoCD,IAApC;AACD,OANH;AAOD,KATM;AAUPE,IAAAA,WAVO,uBAUKR,OAVL,EAUcS,EAVd,EAUkB;AACvBR,MAAAA,KAAK,oDAA6CQ,EAA7C,GAAmD;AACtDP,QAAAA,IAAI,EAAE;AADgD,OAAnD,CAAL,CAGGC,IAHH,CAGQ,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OAHR,EAIGF,IAJH,CAIQ,UAACG,IAAD,EAAU;AACdN,QAAAA,OAAO,CAACO,MAAR,CAAe,4BAAf,EAA6CD,IAA7C;AACD,OANH;AAOD;AAlBM;AAfe,CAAD,CAAzB;AAqCA,eAAef,KAAf","sourcesContent":["import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state() {\n    return {\n      graphStructure: {},\n      selectedNodeInformation: {},\n    };\n  },\n  mutations: {\n    setGraphStructure(state, graphStructure) {\n      state.graphStructure = graphStructure;\n    },\n    setSelectedNodeInformation(state, selectedNodeInformation) {\n      state.selectedNodeInformation = selectedNodeInformation;\n    },\n  },\n  actions: {\n    getGraphStructure(context) {\n      fetch(\"https://b309-109-252-80-60.ngrok.io/org-structure\", {\n        mode: \"cors\",\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          context.commit(\"setGraphStructure\", data);\n        });\n    },\n    getDataCard(context, id) {\n      fetch(`https://b309-109-252-80-60.ngrok.io/card/${id}`, {\n        mode: \"cors\",\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          context.commit(\"setSelectedNodeInformation\", data);\n        });\n    },\n  },\n});\n\nexport default store;\n"]}]}