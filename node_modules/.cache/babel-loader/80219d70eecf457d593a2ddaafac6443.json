{"remainingRequest":"/home/freedomsky/hakaton/front/node_modules/babel-loader/lib/index.js!/home/freedomsky/hakaton/front/node_modules/eslint-loader/index.js??ref--13-0!/home/freedomsky/hakaton/front/src/graph/utils.js","dependencies":[{"path":"/home/freedomsky/hakaton/front/src/graph/utils.js","mtime":1630186945764},{"path":"/home/freedomsky/hakaton/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/freedomsky/hakaton/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/freedomsky/hakaton/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvZnJlZWRvbXNreS9oYWthdG9uL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAqIGFzIGNvbG9yVXRpbCBmcm9tICIuL2NvbG9yLXV0aWwiOwoKZnVuY3Rpb24gdGV4dChjdHgsIHRleHQsIHgsIHksIGZvbnRTaXplLCBmb250Q29sb3IpIHsKICBjdHguZm9udCA9ICJib2xkICIuY29uY2F0KGZvbnRTaXplLCAicHggQXJpYWwiKTsKICBjdHguZmlsbFN0eWxlID0gZm9udENvbG9yOwogIGN0eC5maWxsVGV4dCh0ZXh0LCB4LCB5KTsKfQoKZXhwb3J0IGZ1bmN0aW9uIHV1aWQoKSB7CiAgdmFyIHMgPSBbXTsKICB2YXIgaGV4RGlnaXRzID0gIjAxMjM0NTY3ODlhYmNkZWYiOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IDM2OyBpKyspIHsKICAgIHNbaV0gPSBoZXhEaWdpdHMuc3Vic3RyKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDB4MTApLCAxKTsKICB9CgogIHNbMTRdID0gIjQiOwogIHNbMTldID0gaGV4RGlnaXRzLnN1YnN0cihzWzE5XSAmIDB4MyB8IDB4OCwgMSk7CiAgc1s4XSA9IHNbMTNdID0gc1sxOF0gPSBzWzIzXSA9ICItIjsKICByZXR1cm4gcy5qb2luKCIiKTsKfQoKZnVuY3Rpb24gd3JhcFRleHQoY29udGV4dCwgdGV4dCwgeCwgeSwgbWF4V2lkdGgsIGxpbmVIZWlnaHQsIGZvbnRDb2xvcikgewogIGNvbnRleHQuZmlsbFN0eWxlID0gZm9udENvbG9yOwogIHZhciB3b3JkcyA9IHRleHQuc3BsaXQoIiAiKTsKICB2YXIgbGluZSA9ICIiOwoKICBmb3IgKHZhciBuID0gMDsgbiA8IHdvcmRzLmxlbmd0aDsgbisrKSB7CiAgICB2YXIgdGVzdExpbmUgPSAiIi5jb25jYXQobGluZSArIHdvcmRzW25dLCAiICIpOwogICAgdmFyIG1ldHJpY3MgPSBjb250ZXh0Lm1lYXN1cmVUZXh0KHRlc3RMaW5lKTsKICAgIHZhciB0ZXN0V2lkdGggPSBtZXRyaWNzLndpZHRoOwoKICAgIGlmICh0ZXN0V2lkdGggPiBtYXhXaWR0aCAmJiBuID4gMCkgewogICAgICBjb250ZXh0LmZpbGxUZXh0KGxpbmUsIHgsIHkpOwogICAgICBsaW5lID0gIiIuY29uY2F0KHdvcmRzW25dLCAiICIpOwogICAgICB5ICs9IGxpbmVIZWlnaHQ7CiAgICB9IGVsc2UgewogICAgICBsaW5lID0gdGVzdExpbmU7CiAgICB9CiAgfQoKICBjb250ZXh0LmZpbGxUZXh0KGxpbmUsIHgsIHkpOwp9CgpmdW5jdGlvbiByb3VuZFJlY3QoY29udGV4dCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgcmFkaXVzLCBmaWxsLCBzdHJva2UpIHsKICBpZiAodHlwZW9mIHN0cm9rZSA9PT0gInVuZGVmaW5lZCIpIHsKICAgIHN0cm9rZSA9IHRydWU7CiAgfQoKICBpZiAodHlwZW9mIHJhZGl1cyA9PT0gInVuZGVmaW5lZCIpIHsKICAgIHJhZGl1cyA9IDU7CiAgfQoKICBpZiAodHlwZW9mIHJhZGl1cyA9PT0gIm51bWJlciIpIHsKICAgIHJhZGl1cyA9IHsKICAgICAgdGw6IHJhZGl1cywKICAgICAgdHI6IHJhZGl1cywKICAgICAgYnI6IHJhZGl1cywKICAgICAgYmw6IHJhZGl1cwogICAgfTsKICB9IGVsc2UgewogICAgdmFyIGRlZmF1bHRSYWRpdXMgPSB7CiAgICAgIHRsOiAwLAogICAgICB0cjogMCwKICAgICAgYnI6IDAsCiAgICAgIGJsOiAwCiAgICB9OwoKICAgIGZvciAodmFyIHNpZGUgaW4gZGVmYXVsdFJhZGl1cykgewogICAgICByYWRpdXNbc2lkZV0gPSByYWRpdXNbc2lkZV0gfHwgZGVmYXVsdFJhZGl1c1tzaWRlXTsKICAgIH0KICB9CgogIGNvbnRleHQuYmVnaW5QYXRoKCk7CiAgY29udGV4dC5tb3ZlVG8oeCArIHJhZGl1cy50bCwgeSk7CiAgY29udGV4dC5saW5lVG8oeCArIHdpZHRoIC0gcmFkaXVzLnRyLCB5KTsKICBjb250ZXh0LnF1YWRyYXRpY0N1cnZlVG8oeCArIHdpZHRoLCB5LCB4ICsgd2lkdGgsIHkgKyByYWRpdXMudHIpOwogIGNvbnRleHQubGluZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCAtIHJhZGl1cy5icik7CiAgY29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCwgeCArIHdpZHRoIC0gcmFkaXVzLmJyLCB5ICsgaGVpZ2h0KTsKICBjb250ZXh0LmxpbmVUbyh4ICsgcmFkaXVzLmJsLCB5ICsgaGVpZ2h0KTsKICBjb250ZXh0LnF1YWRyYXRpY0N1cnZlVG8oeCwgeSArIGhlaWdodCwgeCwgeSArIGhlaWdodCAtIHJhZGl1cy5ibCk7CiAgY29udGV4dC5saW5lVG8oeCwgeSArIHJhZGl1cy50bCk7CiAgY29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKHgsIHksIHggKyByYWRpdXMudGwsIHkpOwogIGNvbnRleHQuY2xvc2VQYXRoKCk7CgogIGlmIChmaWxsKSB7CiAgICBjb250ZXh0LmZpbGwoKTsKICB9CgogIGlmIChzdHJva2UpIHsKICAgIGNvbnRleHQuc3Ryb2tlKCk7CiAgfQp9CgpleHBvcnQgZGVmYXVsdCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNvbG9yVXRpbCksIHt9LCB7CiAgdGV4dDogdGV4dCwKICB3cmFwVGV4dDogd3JhcFRleHQsCiAgcm91bmRSZWN0OiByb3VuZFJlY3QKfSk7"},{"version":3,"sources":["/home/freedomsky/hakaton/front/src/graph/utils.js"],"names":["colorUtil","text","ctx","x","y","fontSize","fontColor","font","fillStyle","fillText","uuid","s","hexDigits","i","substr","Math","floor","random","join","wrapText","context","maxWidth","lineHeight","words","split","line","n","length","testLine","metrics","measureText","testWidth","width","roundRect","height","radius","fill","stroke","tl","tr","br","bl","defaultRadius","side","beginPath","moveTo","lineTo","quadraticCurveTo","closePath"],"mappings":"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","sourcesContent":["import * as colorUtil from \"./color-util\";\n\nfunction text(ctx, text, x, y, fontSize, fontColor) {\n  ctx.font = `bold ${fontSize}px Arial`;\n  ctx.fillStyle = fontColor;\n  ctx.fillText(text, x, y);\n}\n\nexport function uuid() {\n  const s = [];\n  const hexDigits = \"0123456789abcdef\";\n  for (let i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = \"4\";\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n  return s.join(\"\");\n}\n\nfunction wrapText(context, text, x, y, maxWidth, lineHeight, fontColor) {\n  context.fillStyle = fontColor;\n  const words = text.split(\" \");\n  let line = \"\";\n  for (let n = 0; n < words.length; n++) {\n    let testLine = `${line + words[n]} `;\n    let metrics = context.measureText(testLine);\n    let testWidth = metrics.width;\n    if (testWidth > maxWidth && n > 0) {\n      context.fillText(line, x, y);\n      line = `${words[n]} `;\n      y += lineHeight;\n    } else {\n      line = testLine;\n    }\n  }\n  context.fillText(line, x, y);\n}\n\nfunction roundRect(context, x, y, width, height, radius, fill, stroke) {\n  if (typeof stroke === \"undefined\") {\n    stroke = true;\n  }\n  if (typeof radius === \"undefined\") {\n    radius = 5;\n  }\n  if (typeof radius === \"number\") {\n    radius = { tl: radius, tr: radius, br: radius, bl: radius };\n  } else {\n    let defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n    for (let side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side];\n    }\n  }\n  context.beginPath();\n  context.moveTo(x + radius.tl, y);\n  context.lineTo(x + width - radius.tr, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n  context.lineTo(x + width, y + height - radius.br);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius.br,\n    y + height\n  );\n  context.lineTo(x + radius.bl, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n  context.lineTo(x, y + radius.tl);\n  context.quadraticCurveTo(x, y, x + radius.tl, y);\n  context.closePath();\n  if (fill) {\n    context.fill();\n  }\n  if (stroke) {\n    context.stroke();\n  }\n}\n\nexport default {\n  ...colorUtil,\n  text,\n  wrapText,\n  roundRect,\n};\n"]}]}